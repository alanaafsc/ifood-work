version: "3.7"

services:
  postgres_cadastro:
    container_name: postgres_cadastro_ifood
    image: postgres:14
    environment:
      POSTGRES_USER: cadastro
      POSTGRES_PASSWORD: cadastro
    ports:
      - "5434:5432"
  postgres_marketplace:
    container_name: postgres_marketplace_ifood
    image: postgres:14
    environment:
      POSTGRES_USER: marketplace
      POSTGRES_PASSWORD: marketplace
    ports:
      - "5433:5432"
  keycloak_ifood:
    container_name: keycloak_ifood
    image: jboss/keycloak:10.0.0
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    ports:
      - "8180:8080"
  jaeger_ifood:
    container_name: jaeger_ifood
    image: jaegertracing/all-in-one:1.6
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
  prometheus_ifood:
    container_name: prometheus_ifood
    image: prometheus-ifood
    ports:
      - "9090:9090"

  grafana_ifood:
    container_name: grafana_ifood
    image: grafana/grafana:9.0.0
    ports:
      - "3000:3000"

  artemis_ifood:
    container_name: artemis_ifood
    image: vromero/activemq-artemis:latest
    environment:
      ARTEMIS_USERNAME: admin
      ARTEMIS_PASSWORD: admin
    ports:
      - "8161:8161"
      - "5672:5672"

  mongodb_ifood:
    container_name: mongodb_ifood
    image: mongo:6.0.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: pedido
      MONGO_INITDB_ROOT_PASSWORD: pedido
      MONGO_INITDB_DATABASE: pedido
    ports:
      - "27017:27017"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    # se ocorrer [1]: max virtual memory areas vm.max_map_count [65530] is too low,
    # increase to at least [262144]
    # sudo sysctl -w vm.max_map_count=262144
  elastic:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    ports:
      - "9200:9200"
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - network.host=127.0.0.1
      - http.host=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.2
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash-oss:6.8.2
    ports:
      - "12201:12201/udp"
      - "5044:5044"
    volumes:
      - source: ./pipelines
        target: /usr/share/logstash/pipeline
        type: bind
    depends_on:
      - elastic

networks:
  broker-kafka:
    driver: bridge